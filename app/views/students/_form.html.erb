<%= form_with(model: student, local: true, html: {id: 'student_form'}) do |form| %>
  <% if student.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(student.errors.count, "error") %> prohibited this student from being saved:</h2>

      <ul>
      <% student.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <%= form.hidden_field :latitude, id: :latitude %>
  <%= form.hidden_field :longitude, id: :longitude %>
  <div class="row">
    <div class="form-group col-md-6">
      <%= form.label :first_name %>
      <%= form.text_field :first_name, class: 'form-control rounded-0' %>
    </div>
    <div class="col-md-6">
      <div class="form-group">
        <%= form.label :last_name %>
        <%= form.text_field :last_name, class: 'form-control rounded-0' %>
      </div>
    </div>
  </div>

  <div class="row">
    <div class="form-group col-md-6">
      <%= form.label :date_of_birth %>
      <%= form.text_field :date_of_birth, placeholder: "dd/mm/yyyy" ,class: 'form-control rounded-0 datepicker', "aria-describedby"=> "basic-addon2" %>
    </div>

    <div class="form-group col-md-6">
      <%= form.label :course %>
      <%= form.text_field :course, class: 'form-control rounded-0' %>
    </div>
  </div>

  <div class="row">
    <div class="form-group col-md-6">
      <%= form.label :address %>
      <%= form.text_field :address, class: "form-control rounded-0", placeholder: "Student Address", required: true, id: "autocomplete", onFocus: "geolocate()" %>
    </div>
    <div class="form-group col-md-6">
      <%= form.label :city %>
      <%= form.text_field :city, class: "form-control rounded-0",required: true, id: :locality, disabled: true %>
    </div>
  </div>

  <div class="row">
    <div class="form-group col-md-6">
      <%= form.label :state %>
      <%= form.text_field :state, class: "form-control rounded-0",id: :administrative_area_level_1, disabled: true %>
    </div>
    <div class="form-group col-md-6">
      <%= form.label :country %>
      <%= form.text_field :country, class: "form-control rounded-0", id: :country, disabled: true  %>
    </div>
  </div>

  <div class="row">
    <div class="form-group col-md-6">
      <%= form.label :zipcode %>
       <%= form.text_field :zipcode, class: "form-control rounded-0", id: :postal_code, disabled: true %>
    </div>
    <div class="form-group col-md-6">
      <%= form.label :phone_numbers %>
      <%= form.text_field :phone_numbers, class: 'form-control rounded-0' %>
    </div>
  </div>

  <div class="row">
    <div class="form-group col-md-6">
      <%= form.label :placed_at %>
      <%= form.text_field :placed_at, class: 'form-control rounded-0' %>
    </div>
    <div class="form-group col-md-6">
      <%= form.label :date_of_joining %>
      <%= form.text_field :date_of_joining, class: 'form-control rounded-0' %>
    </div>
  </div>

  <div class="row">
    <div class="form-group col-md-6">
      <%= form.label :fees %>
      <%= form.text_field :fees, class: 'form-control rounded-0' %>
    </div>

    <div class="form-group col-md-6">
      <%= form.label :status %>
      <%= form.select :status, options_for_select(Student::STATUS, selected: form.object.try(:status)), {include_blank: "Select status"}, {class: 'form-control form-control-line'} %>
    </div>
  </div>

  <div class="actions">
    <%= form.submit class: "btn btn-primary", data: {turbolinks: false} %>
  </div>
<% end %>

<script>
  $( document ).ready(function() {
    $('.datepicker').datepicker({format: 'dd/mm/yyyy'});
  });
</script>
<style type="text/css">
  .error{
    color: #ad2424f7;
  }
  .form-control.error {
    border: 1px solid #d6453f;
}
</style>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBFBYM37YGMTdgkEp9fipPljSjprTDZL8Y&libraries&libraries=places&callback=initAutocomplete"
    async defer></script>
<script type="text/javascript">
  var placeSearch, autocomplete;
  var componentForm = {
  locality: 'long_name',
  administrative_area_level_1: 'long_name',
  country: 'long_name',
  postal_code: 'short_name'
};
function initAutocomplete() {
  autocomplete = new google.maps.places.Autocomplete(
      /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
      {types: ['geocode']});
  autocomplete.addListener('place_changed', fillInAddress);
}
function fillInAddress() {
  var place = autocomplete.getPlace();
  $("#latitude").val(place.geometry.location.lat());
  $("#longitude").val(place.geometry.location.lng());
  for (var component in componentForm) {
    document.getElementById(component).value = '';
    document.getElementById(component).disabled = false;
  }
  for (var i = 0; i < place.address_components.length; i++) {
    var addressType = place.address_components[i].types[0];
    if (componentForm[addressType]) {
      var val = place.address_components[i][componentForm[addressType]];
      document.getElementById(addressType).value = val;
    }
  }
}
function geolocate() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var geolocation = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      var circle = new google.maps.Circle({
        center: geolocation,
        radius: position.coords.accuracy
      });
      autocomplete.setBounds(circle.getBounds());
    });
  }
}
</script>